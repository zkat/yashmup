Starting with tag:
[TAG 0.9.0
James Bielman  <jamesjb@jamesjb.com>**20060204082912] 
[Remove note about unsupported FOREIGN-FUNCALL on Lispworks.
James Bielman  <jamesjb@jamesjb.com>**20060206185439] 
[reference prose in Pointers and Strings manual chapters
Stephen Compall <scompall@nocandysw.com>**20060209183938
 
 - (Tutorial-easy_setopt): Use @dots{}.
 - (seealso): Remove old comment about @code formatting.
 - Pointers chapter: Describe the theory of foreign data, dealing with
   pointers per se, and expand on the allocation description.
 - (Strings): A short paragraph by way of introduction.
] 
[Minor documentation changes
Luis Oliveira <loliveira@common-lisp.net>**20060209225109
 
 - Have the Makefile's clean target delete some more of the temporary
   texinfo files.
 - Comment out reference to explain-foreign-slot-value.
] 
[Make :boolean accept typedefs to integer types.
Luis Oliveira <loliveira@common-lisp.net>**20060210003650] 
[More minor doc changes.
Luis Oliveira <loliveira@common-lisp.net>**20060210005707
 
 - @emph -> @var.
 - change var's style to something more sensible in the CSS file.
 - remove (setf callback) from the docs.
 - fix some typos.
] 
[Remove @r{} in manual's code comments
Luis Oliveira <loliveira@common-lisp.net>**20060210021117
 
 (at least until the colorize script can cope with these)
] 
[make Texinfo @r and colorize play nice
Stephen Compall <scompall@nocandysw.com>**20060210035038
 
 - Comment out master menu entry for explain-foreign-slot-value so
   manual builds again.
 - Add @r to all Lisp comments in manual.
 - (Tutorial-easy_setopt): Revert previous @dots{}; it is literal
   `...', not an ellipsis.  Oops.
 - In colorize-lisp-examples.lisp, remove the output generated by @r
   from Lisp blocks.  Also shove around the process-file code some.
] 
[use lispcmt for code comments instead of @r
Stephen Compall <scompall@nocandysw.com>**20060210160507
 
 - Add ROMANCOMMENTS option to manual.
 - Change all instances of @r to @lispcmt.
] 
[Use slanted instead of italic for VAR in style.css
Luis Oliveira <loliveira@common-lisp.net>**20060210195248] 
[Removed outdated comment from the colorize script.
Luis Oliveira <loliveira@common-lisp.net>**20060210220055] 
[Push CFFI-FEATURES:X86-64 on Allegro/amd64.
James Bielman  <jamesjb@jamesjb.com>**20060211003123] 
[Implement simple version check for libtest DLL
Jack Unrue <jdunrue@gmail.com>**20060212182709] 
[Macroexpansion-time translators
Luis Oliveira <loliveira@common-lisp.net>**20060214001931
 
 - New interface. expand-to-foreign-dyn, expand-to-foreign and
   expand-from-foreign.
 - defcfun/foreign-funcall/defcallback/defcvar use this as well
   as the compiler macros and setf-expanders for mem-ref, mem-aref,
   and foreign-slot-value.
 - Also, parse ignore declarations and use them to avoid translating
   such types (thus avoiding breaking the ignore declaration).
] 
[Change defconstant to defparameter in bindings.lisp
Luis Oliveira <loliveira@common-lisp.net>**20060214002839] 
[MORE TESTS
Luis Oliveira <loliveira@common-lisp.net>**20060214032830
 
 - New tests: callbacks.funcall.2, callbacks.bff.[12], defcfun.bff.[12].
 - Re-enable defcfun.varargs.double.
 - Use #'float instead of #'coerce in the defcfun.varargs.* tests.
 - Fix dll version in libtest.c.
] 
[Preliminary random tester.
Luis Oliveira <loliveira@common-lisp.net>**20060214042733
 
 - Push random-tester.lisp. This was used to generate the BFF tests,
   but is still not automated.
 - Update respective TODO item.
] 
[Fix float varargs promotion.
Luis Oliveira <loliveira@common-lisp.net>**20060214042928
 
 - Convert floats to doubles in foreign-funcall-varargs. Test
   DEFCFUN.VARARGS.FLOAT now passes.
] 
[Ignore RETTYPE in Allegro CL %DEFCALLBACK.
James Bielman  <jamesjb@jamesjb.com>**20060215022651] 
[Implement %MEM-REF and %MEM-SET compiler macros for Allegro CL.
James Bielman  <jamesjb@jamesjb.com>**20060215025257] 
[Make (%callback 'non-existant-callback) signal an error
Luis Oliveira <loliveira@common-lisp.net>**20060215025906
 
 - Make %callback signal an error for non-existing callbacks.
   (allegro, sbcl and openmcl)
 - Regression test: callbacks.non-existant
] 
[Minor test changes
Luis Oliveira <loliveira@common-lisp.net>**20060215030152
 
 - Use long instead of int in the big C functions in libtest.c.
 - Mark callbacks.bff.[12] as expect failures for a couple of
   lisps.
] 
[A few more tests
Luis Oliveira <loliveira@common-lisp.net>**20060215163551
 
 - Tests for the new macroexpansion-time type translator interface:
   MISC-TYPES.EXPAND.[1234]
 - New tests: DEREF.LONG-LONG and DEREF.UNSIGNED-LONG-LONG.
 - Tests for mem-ref with non-constant type arguments: DEREF.NONCONST.*
 - Fix some comments in tests/memory.lisp.
 - New test: MISC-TYPES.BOOLEAN.2 (accepting typedefs to integer types)
] 
[Remove completed TODO item about building 32 and 64 bit libtest.
James Bielman  <jamesjb@jamesjb.com>**20060215091337] 
[Change +REQUIRED-DLL-VERSION+ to *REQUIRED-DLL-VERSION*.
James Bielman  <jamesjb@jamesjb.com>**20060215171631] 
[Oops, fix tests.
Luis Oliveira <loliveira@common-lisp.net>**20060215174316
 
 - MISC-TYPES.BOOLEAN.2 was using the wrong ff name.
 - MISC-TYPES.EXPAND.* need the expand-* methods defined at
   macroexpansion-time.
] 
[Use C limits for foreign floats and doubles instead of Lisp's.
James Bielman  <jamesjb@jamesjb.com>**20060215201514
 
 - Export 'float_min', 'float_max', 'double_min', and 'double_max' from
   the libtest shared library with the values of FLT_MIN, FLT_MAX, 
   DBL_MIN, and DBL_MAX, respectively.
 - Use *FLOAT-MIN*, *FLOAT-MAX*, *DOUBLE-MIN*, and *DOUBLE-MAX* as test
   values for foreign floats/doubles instead of the Lisp constants
   <foo>-POSITIVE-<bar>-FLOAT.
] 
[Delete LispWorks/Linux .ufsl files on make clean.
James Bielman  <jamesjb@jamesjb.com>**20060215213442] 
[Implement compiler macros for %MEM-REF and %MEM-SET in LispWorks.
James Bielman  <jamesjb@jamesjb.com>**20060215222559
 
 - Use FLI:FOREIGN-TYPED-AREF if available and dereferencing a number.
 - Avoid calling INC-POINTER when the offset is a multiple of the type
   size allowing direct use of the INDEX argument to FOREIGN-TYPED-AREF.
 - Fall back to open-coding the call to FLI:DEREFERENCE otherwise.
] 
[New TODO item: defcfun compiler macros
Luis Oliveira <loliveira@common-lisp.net>**20060216045240] 
[New functions convert-to/from-foreign and free-converted-object
Luis Oliveira <loliveira@common-lisp.net>**20060216045335
 
 - These functions basically export the functionality of
   translate-type-to-foreign, translate-type-from-foreign and
   free-translated-object.
 - TODO: document these.
] 
[CFFI Manual update
Luis Oliveira <loliveira@common-lisp.net>**20060216045547
 
 - Update known issues (callback.bff.[12] failures).
 - defbitfield, foreign-bitfield-symbols and foreign-bitfield-value.
 - Fix typo in tutorial. defenum -> defcenum.
 - New section "Other Types" documenting :string, :boolean and
   :wrapper.
 - Add note about the translate-* methods not being meant to be called
   directly and suggesting convert-* instead.
 - Document the macroexpansion-time translators in a new
   "Optimizing Type Translators" sub-section.
 - Document defcenum's base-type option.
 - Document defcfun's varargs support.
] 
[Minor change to tests/defcfun.lisp
Luis Oliveira <loliveira@common-lisp.net>**20060216050735
 
 - Remove unnecessary (setf (mem-ref s :char) 0) forms.
] 
[Fix typo. extend -> extent
Luis Oliveira <loliveira@common-lisp.net>**20060216051544] 
[Fix and add tests for %MEM-REF and %MEM-SET evaluation order.
James Bielman  <jamesjb@jamesjb.com>**20060216083448
 
 - Some minor reformatting of LOOP forms to pacify cl-indent.
 - Add new regression tests to check the evaluation order of
   %MEM-REF and %MEM-SET.
 - Add the necessary ONCE-ONLY forms to the compiler macros.
 - Have the CFFI-TESTS package use CFFI-SYS for testing primitives.
] 
[Fix LOOP indentation in backends.
James Bielman  <jamesjb@jamesjb.com>**20060217204457
 
 - Thanks for Lu√≠s for showing me how to configure Emacs to get this right.
] 
[Make CLISP not throw an error on undefined functions
Luis Oliveira <loliveira@common-lisp.net>**20060220044813
 
 - Catch the error in %foreign-funcall and throw a warning instead.
 - Regression test: DEFCFUN.UNDEFINED. (CMUCL fails)
] 
[Implement and use my_llabs instead of llabs in tests
Luis Oliveira <loliveira@common-lisp.net>**20060223081406] 
[Update TODO item about fixnums.
Luis Oliveira <loliveira@common-lisp.net>**20060223181831] 
[SCL port, courtesy of Douglas Crosher
Luis Oliveira <loliveira@common-lisp.net>**20060223061757
 
 - Makefile: new test-scl target. Add SCL's fasl file extensions
   to the clean target.
 - Remove SCL TODO item.
 - New file: cffi-scl.lisp.
 - New primitive type :long-double. Since it's only supported by
   SCL, it's not worth adding a no-long-double feature just yet.
 - New tests for :long-double.
 - Add information about SCL and the new :long-double type to
   the user manual.
] 
[Fix cffi-lispworks bug in foreign-funcall.
Luis Oliveira <loliveira@common-lisp.net>**20060224131735
 
 - Add same declarations to define-foreign-funcallable as those used
   for define-foreign-callable.
 - Makes FUNCALL.FLOAT pass on linux/x86.
] 
[More tests
Luis Oliveira <loliveira@common-lisp.net>**20060224192231
 
 - A couple of new tests involving defcfun/foreign-funcall/defcallback and
   lots of doubles and floats. These were written to figure out what
   exactly was going on with the CALLBACKS.BFF.[12] failures.
] 
[foreign-alloc changes
Luis Oliveira <loliveira@common-lisp.net>**20060225034634
 
 - bugfix, foreign-alloc doesn't need to call translate-type-to-foreign
   explicitly since mem-aref already does. Bug reported by Greg Pfeil.
 - new keyword argument: NULL-TERMINATE-P.
 - new regression tests for the bug described above and new tests for
   the new keyword argument.
 - document new argument.
] 
[Minor change to foreign-alloc's documentation
Luis Oliveira <loliveira@common-lisp.net>**20060225041058
 
 - make it slightly clearer that count can be omitted when
   initial-contents is supplied.
 - add reference to with-foreign-object.
] 
[Try to improve the wording in foreign-alloc's description..
Luis Oliveira <loliveira@common-lisp.net>**20060225155627] 
[TODO item about our use of EVAL
Luis Oliveira <loliveira@common-lisp.net>**20060227194813] 
[More testing
Luis Oliveira <loliveira@common-lisp.net>**20060227194854
 
 - Make defcfun.undefined an expected failure for SBCL on
   non linkage-table platforms.
 - New file: tests/misc.lisp.
 - Added a couple of tests for cffi-features.
] 
[manual: strings, foreign allocation, add `Wrapper generators'
Stephen Compall <scompall@nocandysw.com>**20060228162638
 - Explain the difference between mem-aref and mem-ref by analogy with
   C operators.
 - Use ::= instead of = in with-foreign-object's syntax.
 - (Strings): Explain that it is portable code.
 - (Other Types): Don't use metasyntactic variables in Lisp examples.
 - Add `Wrapper generators' section on Verrazano et al.
 - (Foreign Type Translators): Use Please note: instead of Note: to
   suppress makeinfo warning.
] 
[TODO item about a pointer type, suggested by J√∂rg H√∂hle
Luis Oliveira <loliveira@common-lisp.net>**20060228191642] 
[Remove known issues sub-section from the manual.
Luis Oliveira <loliveira@common-lisp.net>**20060228193623
 
 - Listing the expected failures in the manual is too much
   trouble. Removed those.
 - Also, renamed "The Scieneer Common Lisp" to "Scieneer CL"
   for consistency.
] 
[manual: convert-* interface, optimizing translators overview optimized
Stephen Compall <scompall@nocandysw.com>**20060301043349
 
 - (Wrapper generators): Add comment about the 30-90% figure.
 - Reword `Pointers' to be shorter/clearer.
 - Promote `Optimizing Type Translators' to a full section, a few other
   things here, most conspicuously expanding on the note about expand-*
   method definition time.
 - (Tutorial-Conclusion): Not a first draft anymore.
 - Document convert-to-foreign, convert-from-foreign, and
   free-converted-object.
] 
[when (and ecl (not dffi)) cffi:load-foreign-library doesn't work
Luis Oliveira <loliveira@common-lisp.net>**20060316112818
 
 - mention this in the manual.
 - make l-f-l signal an error on non-dffi ecl platforms.
] 
[SCL update + new cffi-sys primitive
Luis Oliveira <loliveira@common-lisp.net>**20060316114028
 
 - New cffi-sys primitive: canonicalize-symbol-name-case. Use this
   instead of read-from-string. Also new tests for this.
 - cffi-scl.lisp: correct the evaluation order of %MEM-REF and %MEM-SET.
   Have 'foreign-symbol-pointer return 'nil if the symbol is not found.
 - uffi-compat.lisp: better support for SCL.
 - defcfun.lisp (defcfun.undefined): package at time of eval may differ
   from the compile time package.
 
 Patch courtesy of Douglas Crosher.
] 
[Lispworks: use regression-test instead of rt.
Luis Oliveira <loliveira@common-lisp.net>**20060316114554] 
[small manual fixes
Stephen Compall <scompall@nocandysw.com>**20060316115505
 
 - Add convert-to-foreign, convert-from-foreign, and
   free-converted-object to the master menu.
 - (load-foreign-library): Add note about specifying directories in
   paths.
 - (defcfun): Typo in syntax.
] 
[manual-don't use PRINT-OBJECT for CONDITIONs
Stephen Compall <scompall@nocandysw.com>**20060328004944] 
[Small doc changes.
Luis Oliveira <loliveira@common-lisp.net>**20060330214640
 
 - Rewrite paragraph about :float and :double.
 - Fix typo in defbitfield example.
] 
[cmucl: top-level-lambda-max
Luis Oliveira <loliveira@common-lisp.net>**20060330214816
 
 - Use (setf c::top-level-lambda-max 0) allowing compilation
   of bindings without loading foreign libraries first.
 - Change USE-FOREIGN-LIBRARY accordingly. This avoids the
   error we got when loading a library twice (first at
   compile-time, then at load-time).
] 
[sbcl/win32: mark defcfun.undefined as an expected failure
Luis Oliveira <loliveira@common-lisp.net>**20060330215053] 
[demonstrate differing behavior between foreign-dyn expansions
Stephen Compall <scompall@nocandysw.com>**20060301194122
 
 - change expand-type-to-foreign-dyn for foreign-typedef to not
   short-circuit expand-type-to-foreign when falling back (see paste
   17379)
 - add tests showing that you can change the foreign-dyn expansion
   semantics by providing an expand-to-foreign method that falls back
] 
[remove *runtime-translator-form* from the interface
Stephen Compall <scompall@nocandysw.com>**20060327173632
 
 - Remove *runtime-translator-form* from the public interface, in favor
   of (call-next-method).
 - Describe this change in the manual, including some text from the
   option 1 patch.
 - Be clear that ALLOC-PARAM is thrown out by %expand-type-to-foreign.
] 
[New TODO item: warn about :void
Luis Oliveira <loliveira@common-lisp.net>**20060414204852] 
[foreign-symbol-pointer changes
Luis Oliveira <loliveira@common-lisp.net>**20060414204918
 
 - Remove second argument from foreign-symbol-pointer.
 - Update foreign-symbol-pointer documentation in the manual.
 - New tests: funcall.f-s-p.1 and foreign-symbol-pointer.[12].
] 
[non-toplevel defcallback forms
Luis Oliveira <loliveira@common-lisp.net>**20060414205810
 
 - Add note to the manual about non-toplevel defcallback forms.
 - Add a test for this (comment out, since it's not portable).
] 
[update tests
Luis Oliveira <loliveira@common-lisp.net>**20060414210017
 
 - update dll version.
 - add some CMUCL/darwin failures.
] 
[Add 'all' target to doc/Makefile
Luis Oliveira <loliveira@common-lisp.net>**20060414210137] 
[More minor changes to cffi-tests
Luis Oliveira <loliveira@common-lisp.net>**20060418011001
 
 - add asdf:test-op to the cffi system
 - mark a couple more cmucl failures
 - get rid of the warning in libtest.c about comparing void* and
   function pointer
] 
[Make release.sh more suitable for versioned releases
Luis Oliveira <loliveira@common-lisp.net>**20060418011309] 
[TAG 0.9.1
Luis Oliveira <loliveira@common-lisp.net>**20060418011351] 
[Oops, forgot to bump the version number.
Luis Oliveira <loliveira@common-lisp.net>**20060424025119] 
[Include stdint.h in libtest.c
Luis Oliveira <loliveira@common-lisp.net>**20060424025320] 
[Add support for finalizers
Luis Oliveira <loliveira@common-lisp.net>**20060424025357
 
 - New functions: finalize and cancel-finalization.
 - New cffi-"feature": no-finalizers. Only ECL pushes this.
 - Document new functions.
] 
[Make corman's finalizers thread-safe (hopefully)
Luis Oliveira <loliveira@common-lisp.net>**20060424173620] 
[Add OpenMCL/X86-64 fasl files to 'make clean'.
James Bielman  <jamesjb@jamesjb.com>**20060503061637] 
[Conditionally set variables for implementations in Makefile.
James Bielman  <jamesjb@jamesjb.com>**20060503063241
 
 - Allow overriding from the environment as suggest in the comment, which
   didn't actually work. (eg.: OPENMCL=openmcl64 make test)
] 
[Update copyright year in file headers.
James Bielman  <jamesjb@jamesjb.com>**20060503063944] 
[More copyright header year updates.
James Bielman  <jamesjb@jamesjb.com>**20060503064225] 
[Bugfix: Specialize UNPARSE for UFFI-CHAR in CFFI-UFFI-COMPAT.
James Bielman  <jamesjb@jamesjb.com>**20060504015421
 
 - Fixes an error when loading FASL files that dumped UFFI-CHAR instead
   of (UFFI-CHAR :CHAR) using MAKE-LOAD-FORM.
 - Reported by Ricardo Boccato.
] 
[Conditionalize against non-CPU specific word-size features in OpenMCL.
James Bielman  <jamesjb@jamesjb.com>**20060504021623] 
[Recognize OpenMCL/X86-64 and set CFFI features accordingly.
James Bielman  <jamesjb@jamesjb.com>**20060504173940] 
[Bugfix: Quote type arguments to %DEFCFUN-VARARGS.
James Bielman  <jamesjb@jamesjb.com>**20060507002829] 
[Make :POINTER a parameterized foreign type.
James Bielman  <jamesjb@jamesjb.com>**20060507003511
 
 - :POINTER without arguments is a void pointer.
 - (:POINTER :INT) is a pointer to an :INT.
 - These nest properly: (:POINTER (:POINTER :INT)).
 - Pointers are not type checked yet---an optional pointer type checker
   will be added someday.
] 
[implicit defbitfield symbol values
Stephen Compall <scompall@nocandysw.com>**20060511072106
 
 - Foreign Type Translators: defctype does not create Lisp types; you
   have to use eql specializers.
 - enum.lisp: Use reduce in %foreign-bitfield-value.  Code a default
   rule for bitfield symbol values.
] 
[Fix defbitfield bug and new test
Luis Oliveira <loliveira@common-lisp.net>**20060511145035
 
 - Bug fix: when the first value was provided a (< foo nil) comparision
   would occur. Regresion test: bitfield.1.
 - New test bitfield.2.
] 
[only single-bits affect defbitfield implicit values
Stephen Compall <scompall@nocandysw.com>**20060511154221
 
 - Remove a case in which a non-single-bit like 3 could hijack the
   implicit value computation for defbitfield.
 - New test bitfield.3 for this behavior.
] 
[defbitfield: explicit initial zero case
Stephen Compall <scompall@nocandysw.com>**20060511162202
 
 - Provide for counting an initial zero as a pseudo-single-bit.
 - Test bitfield.4.
] 
[change first automatic defbitfield value to 1
Stephen Compall <scompall@nocandysw.com>**20060512153832
 
 - make-foreign-bitfield now starts implicit bitfield values at 1.  No
   more special cases for zero.
 - Document and update bf tests to match.
] 
[Fix problem with declarations in DEFCALLBACKs
Luis Oliveira <loliveira@common-lisp.net>**20060514234218
 
 - Place declarations after the translations take place.
 - We no longer poke at ignore declarations in defcallback.
] 
[Fix uffi-compat bugs
Luis Oliveira <loliveira@common-lisp.net>**20060520181344
 
 - :pointer is no longer a built-in type so we have to parse it,
   not find-type it.
 - def-array-pointer actually defines an array type with 1 element.
   (this emulates UFFI's behaviour)
 
 Bug report and initial patches courtesy of Lou Vanek.
] 
[Fix some ECL bugs (maybe)
Luis Oliveira <loliveira@common-lisp.net>**20060526113437
 
 - Fixed some bitrot in cffi-ecl.lisp (maybe). Still can't test
   properly because of an ECL bug related to make-load-form.
] 
[Minor simplification in tests/bindings.lisp
Luis Oliveira <loliveira@common-lisp.net>**20060526113626] 
[bugfix: accept symbols in defcvar
Luis Oliveira <loliveira@common-lisp.net>**20060527020411
 
 - Fix lisp-var-name to accept symbols.
 - Regression test: foreign-globals.symbol-name
] 
[Lispworks bugfix: %mem-ref and %mem-set compiler macros
Luis Oliveira <loliveira@common-lisp.net>**20060607022325
 
 - The %mem-ref and %mem-set in cffi-lispworks.lisp were using
   bogus indexes. FLI's documentation suggests foreign-typed-aref
   expects array indexes but it seems to want offsets in bytes
   instead.
 - Regression tests: mem-ref.rt.1 and mem-ref.rt.2.
] 
[Minor comestic change in foreign-vars.lisp
Luis Oliveira <loliveira@common-lisp.net>**20060607022335] 
[Huh. Found a very old and incomplete sentence in the manual.
Luis Oliveira <loliveira@common-lisp.net>**20060607022358] 
[Run tests both compiled and uncompiled.
Luis Oliveira <loliveira@common-lisp.net>**20060607183000
 
 - Make the test-suite run both with and without rt::*compile-tests*
   bound to T.
] 
[uffi-compat: in load-foreign-library, don't probe for file if no directory.
Nathan Bird <nathan@acceleration.net>**20060517201239
 
 If it is just a filename without a directory, continue passing it down
 to the underlying functions, as they probably know how to find a library
 in default location.s
 
 The test now matches the uffi behaviour too.
] 
[review Foreign Types; add Glossary
Stephen Compall <scompall@nocandysw.com>**20060613205550] 
[ECL fixes
Luis Oliveira <loliveira@common-lisp.net>**20060627010520
 
 - cffi-ecl fixes:
    - push cffi-features:unix on darwin too.
    - use si:load-foreign-module instead of ffi:load-foreign-library
      on DFFI platforms.
    - use convert-external-name in foreign-symbol-pointer.
 - wrap defcvar's define-foreign-symbol around eval-when.
 - simplify default-library-suffix
 - cffi-tests:
    - load libtest.o on ECL platforms without DFFI.
    - conditionalize the tests with 127 arguments based on the
      value of lambda-parameters-limit.
] 
[Add long-long support to CLISP
Luis Oliveira <loliveira@common-lisp.net>**20060627011858
 
 Patch courtesy of Fr√©d√©ric Jolliton.
] 
[Update cffi-uffi-compat to reflect recent UFFI changes.
Luis Oliveira <loliveira@common-lisp.net>**20060831152423
 
 - Better handling of shared library extensions on Windows.
 
 Patch courtesy of Kevin Rosenberg.
] 
[Misc manual cleanups like s/=>/@result{}/, etc...
Luis Oliveira <loliveira@common-lisp.net>**20060831152837] 
[New macro: INCF-POINTER (with documentation)
Luis Oliveira <loliveira@common-lisp.net>**20060831153039] 
[New TODO items about LOAD-FOREIGN-LIBRARY.
Luis Oliveira <loliveira@common-lisp.net>**20060831153130] 
[[u]llong alignment issues on darwin/ppc
Luis Oliveira <loliveira@common-lisp.net>**20060905101150
 
 - CLISP: special case for :[unsigned-]long-long on darwin/ppc.
 - SBCL: missing special case for :unsigned-long-long.
 - New regression test: STRUCT.ALIGNMENT.8.
] 
[Support for recent CVS versions of CLISP
Luis Oliveira <loliveira@common-lisp.net>**20060905103418
 
 - As of 2006-09-03, CLISP's FFI::FOREIGN-LIBRARY-FUNCTION takes
   an additional argument. Accomodated this change.
 
 Patch courtesy of Kevin Rosenberg.
] 
[Backwards compatibility for cffi-clisp's foreign-funcall
Luis Oliveira <loliveira@common-lisp.net>**20060906101336] 
[Use the RTEST package nickname instead of RT because of Lispworks.
Luis Oliveira <loliveira@common-lisp.net>**20060906114027] 
[Use array-total-size-limit as the max size for strings
asf@boinkor.net**20060907070312] 
[Allow ub8 arrays to be autoconverted to foreign strings
asf@boinkor.net**20060907070339] 
[Bump ddl_version in libtest.c
Luis Oliveira <loliveira@common-lisp.net>**20060907102249] 
[Documentation update.
Luis Oliveira <loliveira@common-lisp.net>**20060908162427
 
 - Better document the :STRING type.
 - Add documentation for the :STRING+PTR type.
 - Update the documentation to reflect the recent changes to
   string functions and macros that make them accept ub8 arrays.
 - Document the "t" feature expression in DEFINE-FOREIGN-LIBRARY.
] 
[Allow ub8 arrays to be autoconverted to foreign strings
asf@boinkor.net**20060907101804] 
[with-foreign-string: accept ub8 arrays.
Luis Oliveira <loliveira@common-lisp.net>**20060908161504
 
 - WITH-FOREIGN-STRING: check for (or string (array (unsigned-byte 8))).
 - New tests: misc-types.string.ub8.[12].
] 
[Fix some conflicts.
Luis Oliveira <loliveira@common-lisp.net>**20060908203805
 
 Note to self: do not use darcs amend-record with someone else's patch. Doh.
] 