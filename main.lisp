(in-package :yashmup)

(defun load-player-ship-image ()
  (let ((ship-image-path (merge-pathnames #p"player-ship.png" *resource-path*)))
    (sdl-image:load-image (namestring ship-image-path) :alpha 255)))

(defun deal-with-player-stuff (player-ship)
  (with-slots ((x x-loc)
	       (y y-loc)
	       (dx x-vel)
	       (dy y-vel))
      player-ship
    (when (key-down-p :sdl-key-left)
      (decf x dx))
    (when (key-down-p :sdl-key-right)
      (incf x dx))
    (when (key-down-p :sdl-key-up)
      (decf y dy))
    (when (key-down-p :sdl-key-down)
      (incf y dy))
    (if (key-down-p :sdl-key-space)
	(setf (firing-p player-ship) t)
	(setf (firing-p player-ship) nil))))

(defun main ()
  (setf *running* t)
  (sdl:with-init (sdl:sdl-init-video)
    (sdl:initialise-default-font)
    (sdl:window *screen-width* *screen-height*
		:title-caption "PEW PEW"
		:icon-caption "PEW PEW")
    (setf (sdl:frame-rate) 60)
    (sdl:clear-display *bg-color*)
    (let ((player-ship (make-instance 'player-ship)))
      (sdl:with-events ()
	(:quit-event () (prog1 t
			  (setf *running* nil)))
	(:key-down-event (:key key)
			 (handle-key-down key))
	(:key-up-event (:key key)
		       (handle-key-up key))
	(:idle ()
	       (sdl:clear-display *bg-color*)
	       (deal-with-player-stuff player-ship)
	       (draw player-ship)
	       (when (firing-p player-ship)
		 (push (make-instance 'missile
				      :x-loc (+ 25 (x-loc player-ship))
				      :y-loc (+ (y-loc player-ship) 35)
				      :shooter player-ship)
		       (missiles player-ship)))
	       (mapcar #'move (missiles player-ship))
	       (mapcar #'draw (missiles player-ship))
	       (sdl:update-display)
	       (when (not *running*)
		 (sdl:push-quit-event)))))))